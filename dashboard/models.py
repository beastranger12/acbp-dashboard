from django.db import models

# Create your models here.
class productivity(models.Model):
    pid= models.AutoField(primary_key=True)
    # for adhoc domain="Adhoc"
    website = models.CharField(max_length=100,null='False', blank='False')
    ec_partition_id = models.IntegerField(null='False', blank='False')
    # for adhoc marketplace=owner
    brand = models.CharField(max_length=100,null='False', blank='False')
    # for adhoc product_type= requested adhoc hours
    brand_iteration =  models.CharField(max_length=100,null='False', blank='False')
    phase = models.CharField(max_length=100,null='False', blank='False')
    user = models.CharField(max_length=100,null='False', blank='False')
    task=models.CharField(max_length=100, null='False', blank='False')
    sub_task=models.CharField(max_length=100, null='False', blank='False')
    productivity=models.IntegerField(null='False', blank='False')
    timestamp = models.DateTimeField(null='True', blank='True')
    timestamp2 = models.DateTimeField(null='True', blank='True')



class profile(models.Model):
    uid = models.AutoField(primary_key=True)
    user_name = models.CharField(max_length=50,null='False', blank='False')
    user_role = models.CharField(max_length=50,null='False', blank='False')
    special_role1 = models.CharField(max_length=50,null='False', blank='False')
    special_role2 = models.CharField(max_length=50,null='False', blank='False')

    def __str__(self):
        return '{0} {1}'.format(self.user_name, self.user_role)
class benchmark(models.Model):
    tid=models.AutoField(primary_key=True)
    role=models.CharField(max_length=100, null='False', blank='False')
    task=models.CharField(max_length=100, null='False', blank='False')
    subtask=models.CharField(max_length=100, null='False', blank='False')
    lower_select = models.IntegerField(null='False', blank='False')
    higher_select = models.IntegerField(null='False', blank='False')
    lower_pt = models.IntegerField(null='False', blank='False')
    higher_pt = models.IntegerField(null='False', blank='False')
    
    iterations = models.CharField(max_length=100, null='False', blank='False')
    productivity=models.IntegerField(null='False', blank='False')
    complexity=models.IntegerField(null='False', blank='False')
    parameter=models.IntegerField(null='False', blank='False')

class brand_program(models.Model):
    bid=models.AutoField(primary_key=True)
    brand=models.CharField(max_length=200, null='False', blank='False')
    website=models.CharField(max_length=200, null='False', blank='False')
    first_level_ssp_status=models.CharField(max_length=10, null='False', blank='False')

    program_usecase=models.CharField(max_length=50, null='False', blank='False')
    scrape_ssp_status=models.CharField(max_length=5, null='False', blank='False')
    uec_reflection_status=models.CharField(max_length=5, null='False', blank='False')

    mkpl=models.CharField(max_length=50, null='False', blank='False')
    is_backfill=models.CharField(max_length=5, null='False', blank='False')
    ssl_auto_kvp_status=models.CharField(max_length=10, null='False', blank='False')
    identity_dp_backfill_status = models.CharField(max_length=5, null='False', blank='False')

    is_brand_with_identity_dp=models.CharField(max_length=5, null='False', blank='False')
    matching_status=models.CharField(max_length=5, null='False', blank='False')
    matching_model=models.CharField(max_length=50, null='False', blank='False')
    is_incremental_matching=models.CharField(max_length=5, null='False', blank='False')
    ec_gv_matching_cvg_gt_20=models.CharField(max_length=5, null='False', blank='False')
    ptc_status=models.CharField(max_length=15, null='False', blank='False') 
    non_criteria_status=models.CharField(max_length=50, null='False', blank='False')
    priority=models.CharField(max_length=5, null='False', blank='False')
    overall_website_status=models.CharField(max_length=100, null='False', blank='False')
    ds_queue = models.CharField(max_length=5, null='False', blank='False')

    backfill_status=models.CharField(max_length=50, null='False', blank='False')
    detailed_backfill_status=models.CharField(max_length=200, null='False', blank='False')
    nm_status=models.CharField(max_length=50, null='False', blank='False')
    is_bem=models.CharField(max_length=5, null='False', blank='False')
    is_bem_converted=models.CharField(max_length=5, null='False', blank='False')
    is_bem_attempted=models.CharField(max_length=15, null='False', blank='False') 
    brand_status=models.CharField(max_length=50, null='False', blank='False')
    business_usecase=models.CharField(max_length=5, null='False', blank='False')
    backfill_business_usecase=models.CharField(max_length=100, null='False', blank='False')
    tt_comments = models.CharField(max_length=200, null='False', blank='False')

    backfill_type=models.CharField(max_length=50, null='False', blank='False')
    language=models.CharField(max_length=20, null='False', blank='False')
    business_request=models.CharField(max_length=5, null='False', blank='False')
    brand_iteration=models.CharField(max_length=20, null='False', blank='False')
    website_id=models.CharField(max_length=20, null='False', blank='False')
    vv_nam_dropped=models.CharField(max_length=20, null='False', blank='False')
    scrape_status=models.CharField(max_length=20, null='False', blank='False')

    matching_start_date=models.DateField(null='True', blank='True')
    date=models.DateField(null='True', blank='True') 

    mp_id=models.IntegerField(null='False', blank='True')
    keys_available_website_count=models.IntegerField(null='False', blank='True')
    keys_count=models.IntegerField(null='False', blank='True')
    keys_count_gt_20=models.CharField(max_length=25, null='False', blank='False')
    slots_backfilled_count=models.IntegerField(null='False', blank='True')

    idf_av_performance=models.FloatField(null='False', blank='True')
    idf_av_ssl_performance=models.FloatField(null='False', blank='True')
    scrape_metric=models.CharField(max_length=25, null='False', blank='False')
    matching_gv_coverage=models.FloatField(null='False', blank='True')
    matching_sku_coverage=models.FloatField(null='False', blank='True')
    incremental_matching_gv_coverage=models.FloatField(null='False', blank='True')
    incremental_sku_coverage=models.FloatField(null='False', blank='True')
    flag_overall_website_status=models.CharField(max_length=5, null='False', blank='False')
    month=models.DateField(null='True', blank='True')
    en_nonen=models.CharField(max_length=25, null='False', blank='False')

class brand_ops(models.Model):
    bid=models.AutoField(primary_key=True)
    brand=models.CharField(max_length=200, null='False', blank='False')
    website=models.CharField(max_length=200, null='False', blank='False')
    ec_partition_id=models.CharField(max_length=20, null='False', blank='False')
    mp_id=models.IntegerField(null='False', blank='False')
    ssl_completed_date=models.DateField(null='True', blank='True')
    matching_completed_date=models.DateField(null='True', blank='True')
    incremental_matching_completed_date=models.DateField(null='True', blank='True')
    bs_owner=models.CharField(max_length=50, null='False', blank='False')
    bs_status=models.CharField(max_length=50, null='False', blank='False')
    bs_allocation_date=models.DateField(null='True', blank='True')
    bs_completion_date=models.DateField(null='True', blank='True')
    bsv_owner=models.CharField(max_length=50, null='False', blank='False')
    bsv_status=models.CharField(max_length=50, null='False', blank='False')
    bsv_allocation_date=models.DateField(null='True', blank='True')
    bsv_completion_date=models.DateField(null='True', blank='True')
    ptc_owner=models.CharField(max_length=50, null='False', blank='False')
    ptc_status=models.CharField(max_length=50, null='False', blank='False')
    ptc_allocation_date=models.DateField(null='True', blank='True')
    ptc_completion_date=models.DateField(null='True', blank='True')
    ptv_owner=models.CharField(max_length=50, null='False', blank='False')
    ptv_status=models.CharField(max_length=50, null='False', blank='False')
    ptv_allocation_date=models.DateField(null='True', blank='True')
    ptv_completion_date=models.DateField(null='True', blank='True')
    backfill_owner=models.CharField(max_length=50, null='False', blank='False')
    backfill_status=models.CharField(max_length=50, null='False', blank='False')
    backfill_allocation_date=models.DateField(null='True', blank='True')
    backfill_completion_date=models.DateField(null='True', blank='True')
    bem_owner=models.CharField(max_length=50, null='False', blank='False')
    bem_status=models.CharField(max_length=50, null='False', blank='False')
    bem_allocation_date=models.DateField(null='True', blank='True')
    bem_completion_date=models.DateField(null='True', blank='True')
    published_owner=models.CharField(max_length=50, null='False', blank='False')
    published_status=models.CharField(max_length=50, null='False', blank='False')
    published_allocation_date=models.DateField(null='True', blank='True')
    published_completion_date=models.DateField(null='True', blank='True')
    backfill_type=models.CharField(max_length=50, null='False', blank='False')
    language=models.CharField(max_length=50, null='False', blank='False')
    business_request=models.CharField(max_length=50, null='False', blank='False')
    brand_iteration=models.CharField(max_length=50, null='False', blank='False')    
    bs_priority=models.CharField(max_length=50, null='False', blank='False')
    pt_request_count=models.IntegerField(null='False', blank='True')
    bs_ptname=models.CharField(max_length=50, null='False', blank='False')
    bs_attributes_count=models.IntegerField(null='False', blank='True')
    bs_comments=models.CharField(max_length=50, null='False', blank='False')
    bs_filename=models.CharField(max_length=50, null='False', blank='False')
    bs_path=models.CharField(max_length=50, null='False', blank='False')
    pt_not_found=models.CharField(max_length=50, null='False', blank='False')
    bsv_pt_not_found=models.CharField(max_length=20, null='False', blank='False')
    bs_pt_not_found=models.CharField(max_length=20, null='False', blank='False')
    bsv_attributes_count=models.IntegerField(null='False', blank='True')
    bsv_comments=models.CharField(max_length=50, null='False', blank='False')
    bsv_inaccurate_selection=models.IntegerField(null='False', blank='True')
    bsv_sample_selection=models.IntegerField(null='False', blank='True')
    ptc_selection_size=models.IntegerField(null='False', blank='True')
    parent_count=models.IntegerField(null='False', blank='True')
    bundle_count=models.IntegerField(null='False', blank='True')
    ptc_comments=models.CharField(max_length=50, null='False', blank='False')
    ptc_file_name=models.CharField(max_length=50, null='False', blank='False')
    ptc_path=models.CharField(max_length=50, null='False', blank='False')
    ptv_selection_size=models.IntegerField(null='False', blank='True')
    ptv_comments=models.CharField(max_length=50, null='False', blank='False')
    ptv_file_name=models.CharField(max_length=50, null='False', blank='False')
    ptv_inaccurate_selection=models.IntegerField(null='False', blank='True')
    ptv_sample_selection=models.IntegerField(null='False', blank='True')
    backfill_pt_count=models.IntegerField(null='False', blank='True')
    backfill_source_attributes_count=models.IntegerField(null='False', blank='True')
    backfill_pt_source_attributes_count=models.IntegerField(null='False', blank='True')
    backfill_comments=models.CharField(max_length=50, null='False', blank='False')
    bem_attempted=models.CharField(max_length=50, null='False', blank='False')
    bem_converted=models.CharField(max_length=50, null='False', blank='False')
    #bem_inaccurate_selection=models.IntegerField(null='False', blank='False')
    #bem_sample_selection=models.IntegerField(null='False', blank='False')
    validation_inaccurate_selection=models.IntegerField(null='False', blank='True')
    validation_sample_selection=models.IntegerField(null='False', blank='True')
    require_ontology_attributes_prior_count=models.IntegerField(null='False', blank='True')
    converted_ontology_count=models.IntegerField(null='False', blank='True')
    require_ontology_attributes_post_count=models.IntegerField(null='False', blank='True')
    slots_backfilled_count=models.IntegerField(null='False', blank='True')
    bem_publish_comment=models.CharField(max_length=50, null='False', blank='False')
    mkpl=models.CharField(max_length=45, null='False', blank='False')
    bem_required=models.CharField(max_length=20, null='False', blank='False')
    bem_attribute_count=models.IntegerField(null='False', blank='True')
    vv_nam_dropped=models.CharField(max_length=20, null='False', blank='False')
    backfill_request_date=models.DateField(null='True', blank='True')

    